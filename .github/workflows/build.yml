name: Build & Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main   # or your deployment branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Generate Deployment Package
        run: |
          mkdir -p deploy
          cp target/*.jar deploy/application.jar
          cd deploy && zip -r ../app.zip .

      - name: Deploy to Elastic Beanstalk
        run: |
          EB_BUCKET="${{ secrets.EB_APPLICATION_NAME }}-deployment-bucket"
          
          # Create S3 bucket if not exists
          if ! aws s3 ls "s3://$EB_BUCKET" 2>/dev/null; then
            aws s3 mb "s3://$EB_BUCKET" --region ${{ secrets.AWS_REGION }}
          fi

          VERSION_LABEL="build-${{ github.run_id }}"

          # Upload new app version
          aws s3 cp app.zip s3://$EB_BUCKET/app-${VERSION_LABEL}.zip

          # Create new application version
          aws elasticbeanstalk create-application-version \
            --application-name "${{ secrets.EB_APPLICATION_NAME }}" \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=$EB_BUCKET,S3Key=app-${VERSION_LABEL}.zip

          # Deploy to environment
          aws elasticbeanstalk update-environment \
            --environment-name "${{ secrets.EB_ENVIRONMENT_NAME }}" \
            --version-label $VERSION_LABEL
